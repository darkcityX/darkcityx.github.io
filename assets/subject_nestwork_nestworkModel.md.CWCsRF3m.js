import{_ as a,c as t,a0 as o,o as r}from"./chunks/framework.CSihnngI.js";const s="/images/nestwork/fiveNestworkModel.jpg",l="/images/nestwork/fiveWork.png",i="/images/nestwork/allNestworkModel.png",u=JSON.parse('{"title":"网络模型","description":"","frontmatter":{},"headers":[],"relativePath":"subject/nestwork/nestworkModel.md","filePath":"subject/nestwork/nestworkModel.md","lastUpdated":1750835701000}'),n={name:"subject/nestwork/nestworkModel.md"};function d(c,e,_,p,h,m){return r(),t("div",null,e[0]||(e[0]=[o('<h1 id="网络模型" tabindex="-1">网络模型 <a class="header-anchor" href="#网络模型" aria-label="Permalink to &quot;网络模型&quot;">​</a></h1><p>当遇到一个复杂问题的时候，可以使用分层的思想把问题简单化。从常理出发，我们可以得出以下结论：</p><ul><li>每层相对独立，只需解决自己的问题</li><li>每层无须考虑上层的交付，仅需把自己的结果交给下层即可</li><li>每层有多种方案可供选择，选择不同的方案不会对上下层造成影响</li><li>每一层会在上一层的基础上增加一些额外信息</li></ul><h2 id="五层网络模型" tabindex="-1">五层网络模型 <a class="header-anchor" href="#五层网络模型" aria-label="Permalink to &quot;五层网络模型&quot;">​</a></h2><p><img src="'+s+'" alt="五层网络模型"></p><h2 id="数据的封装和解封装" tabindex="-1">数据的封装和解封装 <a class="header-anchor" href="#数据的封装和解封装" aria-label="Permalink to &quot;数据的封装和解封装&quot;">​</a></h2><p><img src="'+l+'" alt="数据的封装和解封装"></p><h2 id="四层、五层、七层" tabindex="-1">四层、五层、七层 <a class="header-anchor" href="#四层、五层、七层" aria-label="Permalink to &quot;四层、五层、七层&quot;">​</a></h2><p><img src="'+i+'" alt="数据的封装和解封装"></p>',9)]))}const f=a(n,[["render",d]]);export{u as __pageData,f as default};
