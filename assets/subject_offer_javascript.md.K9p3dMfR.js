import{_ as r,c as s,j as a,a as t,o as l}from"./chunks/framework.CSihnngI.js";const j=JSON.parse('{"title":"javascript 面试题汇总","description":"","frontmatter":{},"headers":[],"relativePath":"subject/offer/javascript.md","filePath":"subject/offer/javascript.md","lastUpdated":1750953333000}'),c={name:"subject/offer/javascript.md"};function n(o,e,i,p,d,f){return l(),s("div",null,e[0]||(e[0]=[a("h1",{id:"javascript-面试题汇总",tabindex:"-1"},[t("javascript 面试题汇总 "),a("a",{class:"header-anchor",href:"#javascript-面试题汇总","aria-label":'Permalink to "javascript 面试题汇总"'},"​")],-1),a("h2",{id:"var、let、const的区别-什么是块级作用域",tabindex:"-1"},[t("var、let、const的区别？什么是块级作用域？ "),a("a",{class:"header-anchor",href:"#var、let、const的区别-什么是块级作用域","aria-label":'Permalink to "var、let、const的区别？什么是块级作用域？"'},"​")],-1),a("ul",null,[a("li",null,"var：定义变量，有变量提升，可以跨块访问，没有块级作用域的概念，不能跨函数访问"),a("li",null,"let：es6新增的定义变量的方式，没有变量提升，不可以重复声明，有块级作用域的概念，"),a("li",null,"const： es6新增的定义常量的方式，没有变量提升，声明的变量不可修改，有块级作用域的概念。")],-1),a("p",null,"最初在js中，只有全局作用域、函数作用域，没有块级作用域的概念，在es6时，新增了块级作用域的概念。块级作用域解决了在for循环中声明变量泄漏成全局变量的问题",-1)]))}const u=r(c,[["render",n]]);export{j as __pageData,u as default};
