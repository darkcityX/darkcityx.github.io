import{_ as o,c as i,a0 as l,o as d}from"./chunks/framework.CSihnngI.js";const w=JSON.parse('{"title":"web 相关面试题汇总","description":"","frontmatter":{},"headers":[],"relativePath":"subject/offer/web.md","filePath":"subject/offer/web.md","lastUpdated":1750953333000}'),a={name:"subject/offer/web.md"};function t(c,e,r,s,n,p){return d(),i("div",null,e[0]||(e[0]=[l('<h1 id="web-相关面试题汇总" tabindex="-1">web 相关面试题汇总 <a class="header-anchor" href="#web-相关面试题汇总" aria-label="Permalink to &quot;web 相关面试题汇总&quot;">​</a></h1><h2 id="前端需要注意哪些-seo" tabindex="-1">前端需要注意哪些 SEO <a class="header-anchor" href="#前端需要注意哪些-seo" aria-label="Permalink to &quot;前端需要注意哪些 SEO&quot;">​</a></h2><ul><li><p>合理的 <code>title</code>、 <code>description</code>、 <code>keywords</code>。搜索对这三项的权重逐个减小，</p><ul><li><code>title</code> 强调重点，重要关键词出现不能超过两次，而且要尽量考前，不同页面 <code>title</code> 要有所不同</li><li><code>description</code> 把页面内容高度概括，长度合适，不可过分堆砌关键词，不同页面的 <code>description</code> 有所不同</li><li><code>keywords</code> 列举重要关键词即可</li></ul></li><li><p>语义化的 <code>HTML</code> 代码， 符合 W3C 规范： 语义化代码可以让搜索引擎容易理解网页</p></li><li><p>重要内容 <code>HTML</code> 代码放在最前面：搜索引擎抓取 <code>HTML</code> 顺序从上到下，有的搜索引擎对抓取长度有限制，保证重要内容一定会被抓取</p></li><li><p>重要内容不要 js 输出：爬虫不会执行 js 获取内容</p></li><li><p>少用 <code>iframe</code>： 搜索引擎不会抓取 <code>iframe</code> 中的内容</p></li><li><p>提高网站速度： 网站速度是搜索引擎排序的一个重要指标</p></li></ul><h2 id="谈谈对-mvvm-的理解" tabindex="-1">谈谈对 MVVM 的理解 <a class="header-anchor" href="#谈谈对-mvvm-的理解" aria-label="Permalink to &quot;谈谈对 MVVM 的理解&quot;">​</a></h2><ul><li>Model 层代表数据模型，也可以在 Model 中定义数据修改和操作的业务逻辑;</li><li>View 代表 UI 组件，它负责将数据模型转化成 UI 展现出来，View 是一个同步 View 和 Model 的对象</li><li>在 MVVM 架构下，View 和 Model 之间并没有直接的联系，而是通过 ViewModel 进行交互， Model 和 ViewModel 之间的交互是双向的， 因此 View 数据的变化会同步到 Model 中，而 Model 数据的变化也会立即反应到 View 上。</li><li>对 ViewModel 通过双向数据绑定把 View 层和 Model 层连接了起来，而 View 和 Model 之间的 同步工作完全是自动的，无需人为干涉，因此开发者只需关注业务逻辑，不需要手动操作 DOM，不需要关注数据状态的同步问题，复杂的数据状态维护完全由 MVVM 来统一管理。</li></ul>',5)]))}const V=o(a,[["render",t]]);export{w as __pageData,V as default};
